@tailwind base;
@tailwind components;
@tailwind utilities;
@layer base {
  :root {
    --hue: 320;
    --background: oklch(99% 0.05 var(--hue));
    --background2: oklch(89% 0.09 var(--hue));
    --background3: oklch(74% 0.24 var(--hue));
    --text1: oklch(13% 0.05 var(--hue));
    --text2: oklch(20% 0.06 var(--hue));
    --text3: oklch(25% 0.12 var(--hue));
    --textshadow: oklch(60% 0.3 var(--hue));
    --textshadow2: oklch(35% 0.18 var(--hue));
    --muted: oklch(18% 0.06 var(--hue));
    --card: oklch(99% 0.05 var(--hue));
    --border: oklch(13% 0.05 var(--hue));
    --shadowlight: oklch(85% 0.15 var(--hue) / 0.2);
    --shadowstrong: oklch(70% 0.2 var(--hue) / 0.3);
    --input-bg: var(--background2);
    --input-text: var(--text1);
    --input-placeholder: var(--card);
    --ring-color: var(--border);
    --ring-focus: var(--clr-yellow);
    --clr-neon-pink: oklch(69.55% 0.31 331.65);
    --clr-yellow: oklch(91.93% 0.174 102.53);
    --clr-destructive: oklch(63.26% 0.2532 22.4);
    --clr-pink: oklch(62.3% 0.2268 9.35);
  }
  .dark {
    --background: oklch(13% 0.05 var(--hue));
    --background2: oklch(20% 0.06 var(--hue));
    --background3: oklch(25% 0.12 var(--hue));
    --text1: oklch(99% 0.05 var(--hue));
    --text2: oklch(89% 0.09 var(--hue));
    --text3: oklch(74% 0.24 var(--hue));
    --muted: oklch(18% 0.06 var(--hue));
    --card: oklch(18% 0.06 var(--hue));
    --border: oklch(45% 0.12 var(--hue));
    --shadowlight: oklch(85% 0.15 var(--hue) / 0.2);
    --shadowstrong: oklch(70% 0.2 var(--hue) / 0.3);
    --input-bg: var(--background3);
    --input-text: var(--text2);
    --input-placeholder: var(--muted);
    --ring-color: var(--border);
    --ring-focus: var(--clr-yellow);
    --clr-neon-pink: oklch(69.55% 0.31 331.65);
    --clr-yellow: oklch(91.93% 0.174 102.53);
    --clr-destructive: oklch(63.26% 0.2532 22.4);
    --clr-pink: oklch(62.3% 0.2268 9.35);
  }
}
@tailwind base;
@tailwind components;
@tailwind utilities;
@layer base {
  :root {
    --radius: 0.5rem;
  }
}
@layer utilities {
  .flex-between {
    @apply flex items-center justify-between;
  }

  .text-30-extrabold {
    @apply text-fluid-base font-extrabold;
  }

  .text-30-bold {
    @apply text-fluid-base font-bold;
  }

  .text-30-semibold {
    @apply text-fluid-base font-semibold;
  }

  .text-26-semibold {
    @apply text-fluid-1 font-semibold;
  }

  .text-24-black {
    @apply text-fluid-1 font-black;
  }

  .text-20-medium {
    @apply text-fluid-0 font-medium;
  }

  .text-16-medium {
    @apply text-fluid-1 font-medium;
  }

  .text-14-normal {
    @apply text-sm font-normal;
  }

  .pink_container {
    @apply bg-clr-pink pattern flex min-h-[530px] w-full flex-col items-center justify-center px-6 py-10;
  }

  .tag {
    @apply tag-tri bg-yellow relative rounded-sm px-6 py-3 font-bold uppercase;
  }

  .heading {
    @apply bg-muted text-fluid-5 max-md:text-fluid-3 max-sm:text-fluid-2 my-5 overflow-hidden px-6 py-3 text-center font-extrabold uppercase text-white !important;
  }

  .sub-heading {
    @apply text-fluid-1 max-sm:text-fluid-0 break-words text-center font-medium text-white !important;
  }

  .section_container {
    @apply mx-auto max-w-7xl px-6 py-10;
  }

  .card_grid {
    @apply grid grid-cols-3 gap-5 max-sm:grid-cols-2;
  }

  .card_grid-sm {
    @apply grid gap-5 max-sm:grid-cols-2;
  }

  .no-result {
    @apply text-sm font-normal;
  }

  /* profile */
  .profile_container {
    @apply mx-auto flex w-full max-w-7xl flex-col gap-10 px-6 pb-10 pt-20 max-lg:flex-row;
  }

  .profile_card {
    @apply shadow-100 bg-neon border-border relative z-0 flex h-fit w-80 flex-col items-center justify-center rounded-[30px] border-[5px] px-6 pb-6 pt-20 max-lg:w-full;
  }

  .profile_title {
    @apply border-border bg-muted before:bg-muted after:bg-muted absolute -top-9 w-11/12 rounded-[20px] border-[5px] px-5 py-3 shadow-slate-100 before:absolute before:-bottom-1 before:left-0 before:-z-[1] before:h-[60px] before:w-full before:-skew-y-6 before:rounded-[20px] before:content-[''] after:absolute after:-top-1 after:right-0 after:-z-[1] after:h-[60px] after:w-full after:-skew-y-6 after:rounded-[20px] after:content-[''];
  }

  .profile_image {
    @apply border-border rounded-full border-[3px] object-cover;
  }

  /* idea details */
  .divider {
    @apply bg-muted mx-auto my-10 max-w-4xl border-dotted;
  }

  .view_skeleton {
    @apply bg-muted fixed bottom-3 right-3 h-10 w-24 rounded-lg;
  }

  /* navbar */
  .avatar {
    @apply rounded-full bg-none p-0 drop-shadow-md focus-visible:ring-0 !important;
  }

  .dropdown-menu {
    @apply border-border w-56 rounded-2xl border-2 bg-white p-5 !important;
  }

  .login {
    @apply border-border bg-muted relative border-2 py-4 font-medium transition-all duration-500 hover:shadow-none !important;
  }

  /* searchform */
  .search-form {
    @apply border-border bg-card text-fluid-0 mt-8 flex min-h-[80px] w-full max-w-3xl flex-row items-center gap-5 rounded-[80px] border-2 px-5;
  }

  .search-input {
    @apply h-auto w-full flex-1 font-bold outline-none placeholder:font-semibold;
  }

  .search-btn {
    @apply flex size-[50px] items-center justify-center rounded-full !important;
  }

  /* startupcard */
  .startup-card {
    @apply border-border bg-input-bg hover:border-clr-neon-pink dark:hover:bg-background3 rounded-[22px] border-2 px-5 py-6 shadow-lg transition-all duration-500 hover:bg-pink-200 hover:shadow-lg;
  }

  .startup-card_date {
    @apply text-fluid-0 rounded-full bg-pink-200 px-4 py-2 font-medium group-hover:bg-pink-300 dark:bg-slate-800 dark:group-hover:bg-slate-700;
  }

  .startup-card_desc {
    @apply text-fluid-0 my-3 break-all font-normal;
  }

  .startup-card_img {
    @apply h-[164px] w-full rounded-[10px] object-cover;
  }

  .startup-card_btn {
    @apply text-fluid-0 rounded-full bg-slate-400 px-5 py-3 font-medium !important;
  }

  .startup-card_skeleton {
    @apply bg-muted h-96 w-full rounded-[22px];
  }

  /* startupform */
  .startup-form {
    @apply bg-muted mx-auto my-10 max-w-2xl space-y-8 px-6;
  }

  .startup-form_label {
    @apply text-fluid-1 font-bold uppercase;
  }

  .startup-form_input {
    @apply border-border text-fluid-0 mt-3 rounded-full border-[3px] px-5 py-7 font-semibold !important;
  }

  .startup-form_textarea {
    @apply border-border text-fluid-0 mt-3 rounded-[20px] border-[3px] p-5 font-semibold !important;
  }

  .startup-form_error {
    @apply text-destructive ml-5 mt-2;
  }

  .startup-form_editor {
    @apply border-border text-fluid-0 mt-3 border-[3px] font-semibold !important;
  }

  .startup-form_btn {
    @apply bg-neon border-border text-fluid-0 min-h-[70px] w-full rounded-full border-[4px] p-5 font-bold !important;
  }

  /* view */
  .view-container {
    @apply fixed bottom-3 right-3 mt-5 flex items-center justify-end;
  }

  .view-text {
    @apply text-fluid-0 rounded-lg bg-pink-200 px-4 py-2 font-medium capitalize;
  }

  .category-tag {
    @apply text-fluid-0 rounded-full bg-pink-200 px-4 py-2 font-medium;
  }

  .pattern {
    background-image: linear-gradient(
      to right,
      transparent 49.5%,
      rgba(251, 232, 67, 0.2) 49.5%,
      rgba(251, 232, 67, 0.6) 50.5%,
      transparent 50.5%
    );
    background-size: 5% 100%; /* Increase the size for better visibility */
    background-position: 50%;
    background-repeat: repeat-x;
  }

  .tag-tri {
    @apply before:border-t-border after:border-b-border before:absolute before:left-2 before:top-2 before:border-r-[10px] before:border-t-[10px] before:border-r-transparent before:content-[''] after:absolute after:bottom-2 after:right-2 after:border-b-[10px] after:border-l-[10px] after:border-l-transparent after:content-[''];
  }
}
.w-md-editor-toolbar {
  padding: 10px !important;
}
@layer components {
  /* Global input styles */
  input,
  textarea {
    background-color: var(--input-bg);
    color: var(--input-text);
    border: 1px solid var(--border);
    border-radius: 0.375rem; /* Optional: Adjust border radius */
    padding: 0.5rem; /* Adjust padding as needed */
    font-size: 1rem; /* Adjust font size */
    transition: all 0.3s ease;
  }

  /* Input focus state */
  input:focus,
  textarea:focus {
    outline: none;
    box-shadow: 0 0 0 2px var(--ring-color); /* Ring color on focus */
  }

  /* Placeholder styles */
  input::-moz-placeholder, textarea::-moz-placeholder {
    color: var(--input-placeholder);
  }
  input::placeholder,
  textarea::placeholder {
    color: var(--input-placeholder);
  }

  /* Tailwind ring utility classes for focus */
  .focus\:ring-2:focus {
    box-shadow: 0 0 0 2px var(--ring-focus); /* Ring focus color */
  }
}
.section {
  margin-top: 5rem;
}
.btn {
  display: inline-block;
  font-weight: 600;
  text-decoration: none;
  letter-spacing: -0.05em;
  background-color: var(--clr-neon-pink);
  color: oklch(96.83% 0.007 247.9);
  padding: 0.5em 1em;
  border-radius: 6px;
  box-shadow:
    0 10px 20px oklch(69.55% 0.31 331.65 / 50%),
    0 6px 6px oklch(69.55% 0.31 331.65 / 50%),
    0 0 100px -10px var(--clr-neon-pink);
  transition:
    transform 0.3s,
    box-shadow 0.3s;
}
.btn:hover {
  transform: translateY(-3px);
  box-shadow:
    0 14px 28px oklch(69.55% 0.31 331.65 / 25%),
    0 10px 10px oklch(69.55% 0.31 331.65 / 22%),
    0 0 120px -10px var(--clr-neon-pink);
}
.text-shadow {
  text-shadow:
    0 0 10px var(--textshadow),
    0 0 25px var(--textshadow2);
}
.holder {
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  border: 1px solid red;
}
.list-thumbs-up li::before {
  content: 'üëç';
  margin-right: 0.5rem;
}
.loading {
  filter: blur(40px) grayscale(100%);
}
.loaded {
  filter: blur(0) grayscale(0);
  transition: 0.7s ease-in-out;
}
/* xxs */
@media (min-width: 240px) {
  .holder {
    max-width: 240px;
  }
}
/* xs */
@media (min-width: 384px) {
  .holder {
    max-width: 384px;
  }
}
/* sm */
@media (min-width: 512px) {
  .holder {
    max-width: 512px;
  }
}
/* md */
@media (min-width: 672px) {
  .holder {
    max-width: 672px;
  }

  /* lg   */
}
@media (min-width: 768px) {
  .holder {
    max-width: 768px;
  }
}
/* xlg */
@media (min-width: 1024px) {
  .holder {
    max-width: 1024px;
  }
}
/* xxl */
@media (min-width: 1440px) {
  .holder {
    max-width: 1440px;
  }
}
/* xxxl */
@media (min-width: 1920px) {
  .holder {
    max-width: 1920px;
  }
}
@tailwind base;
@tailwind components;
@tailwind utilities;
/* grid layout */
/* Set up base custom properties */
:where(html) {
  --grid-cell: [stack] 1fr / [stack] 1fr;
  --grid-cell-name: stack;

  --grid-ram: repeat(auto-fit, minmax(min(0, 100%), 1fr));
  --grid-holy-grail: auto 1fr auto / auto 1fr auto;
}
/* Global properties for the grid system */
* {
  --minItemWidth: 300px;
  --minHeight: 80vh;
  --gutter: 2rem;

  /* Adaptive grid properties */
  --grid_adapt_mixin-viewport_context: 100vw;
  --grid_adapt_mixin-container_context: 100%;
  --grid_adapt_mixin-context: var(--grid_adapt_mixin-viewport_context);

  /* Breakpoints for adaptive layouts */
  --grid_adapt_mixin-break_1: 1024px;
  --above-break_1-columns: 4;
  --grid_adapt_mixin-break_2: 480px;
  --above-break_2-columns: 2;

  /* Grid adaptation mixin */
  --grid_adapt_mixin: repeat(
    auto-fit,
    minmax(
      clamp(
        clamp(
          calc(100% / calc(var(--above-break_1-columns) + 1) + 0.1%),
          calc(calc(var(--grid_adapt_mixin-break_1) - var(--grid_adapt_mixin-context)) * 1e5),
          calc(100% / calc(var(--above-break_2-columns) + 1) + 0.1%)
        ),
        calc(calc(var(--grid_adapt_mixin-break_2) - var(--grid_adapt_mixin-context)) * 1e5),
        100%
      ),
      1fr
    )
  );
}
/* Define different grid structures */
.grid-cell {
  display: grid;
  grid-template-columns: var(--grid-cell);
  gap: var(--gutter);
}
.grid-cell-name {
  display: grid;
  grid-template-columns: var(--grid-cell-name);
  gap: var(--gutter);
}
.grid-ram {
  display: grid;
  grid-template-columns: var(--grid-ram);
  gap: var(--gutter);
}
.grid-holy-grail {
  display: grid;
  grid-template-columns: var(--grid-holy-grail);
  gap: var(--gutter);
}
.grid-adapt-mixin {
  display: grid;
  grid-template-columns: var(--grid_adapt_mixin);
  gap: var(--gutter);
}
/* Utility for stacking items (if necessary) */
[data-grid-stack] {
  --gutter: initial;
  display: grid;
  gap: var(--gutter, 0px);
  align-content: start;
}
/* Inline cluster for row/column items */
[data-grid-inline-cluster] {
  --gutter: initial;
  gap: var(--gutter, 0px);
  display: grid;
  grid-auto-flow: column;
  align-items: center;
  justify-content: start;
}
[data-grid-inline-cluster~='justify:center'] {
  justify-content: center;
}
[data-grid-inline-cluster~='justify:start'] {
  justify-content: flex-start;
}
[data-grid-inline-cluster~='justify:end'] {
  justify-content: flex-end;
}
[data-grid-inline-cluster~='justify:space-between'] {
  justify-content: space-between;
}
[data-grid-inline-cluster~='align:start'] {
  align-items: flex-start;
}
[data-grid-inline-cluster~='align:center'] {
  align-items: center;
}
[data-grid-inline-cluster~='align:end'] {
  align-items: flex-end;
}
[data-grid-inline-cluster~='align:stretch'] {
  align-items: stretch;
}
/* Split grid layouts with different fractions */
[data-grid-split] {
  --gutter: initial;
  display: grid;
  gap: var(--gutter, 0px);
  grid-template-columns: 1fr 1fr;
}
[data-grid-split~='fraction:1/4'] {
  grid-template-columns: 1fr 3fr;
}
[data-grid-split~='fraction:1/3'] {
  grid-template-columns: 1fr 2fr;
}
[data-grid-split~='fraction:1/2'] {
  grid-template-columns: 1fr 1fr;
}
[data-grid-split~='fraction:2/3'] {
  grid-template-columns: 2fr 1fr;
}
[data-grid-split~='fraction:3/4'] {
  grid-template-columns: 3fr 1fr;
}
/* Cover layout for centered items */
[data-grid-cover] {
  display: grid;
  gap: var(--gutter, 0px);
  align-items: start;
  min-block-size: var(--minHeight, 100%);
}
[data-grid-cover] > [data-grid-cover-centered] {
  align-self: center;
}
/* Centered grid element */
[data-grid-center][data-grid-center] {
  max-inline-size: var(--maxWidth, 100%);
  margin-inline-start: auto;
  margin-inline-end: auto;
}
[data-grid-center~='center-children'] {
  display: grid;
  justify-items: center;
}
[data-grid-center~='center-text'] {
  text-align: center;
}
/* Grid with auto-fit items */
[data-grid-fit] {
  display: grid;
  gap: var(--gutter, 0px);
  grid-template-columns: repeat(auto-fit, minmax(min(var(--minItemWidth, 0px), 100%), 1fr));
}
@tailwind base;
@tailwind components;
@tailwind utilities;
@layer components {
  /* Flex Stack */
  .flex-stack {
    @apply flex flex-col;
  }

  /* Flex Inline Cluster */
  .flex-inline-cluster {
    @apply flex flex-wrap items-center;
  }

  /* Justify Content Variants */
  .flex-inline-cluster-justify-center {
    @apply justify-center;
  }
  .flex-inline-cluster-justify-start {
    @apply justify-start;
  }
  .flex-inline-cluster-justify-end {
    @apply justify-end;
  }
  .flex-inline-cluster-justify-space-between {
    @apply justify-between;
  }

  /* Align Items Variants */
  .flex-inline-cluster-align-start {
    @apply items-start;
  }
  .flex-inline-cluster-align-center {
    @apply items-center;
  }
  .flex-inline-cluster-align-end {
    @apply items-end;
  }
  .flex-inline-cluster-align-stretch {
    @apply items-stretch;
  }

  /* Flex Split */
  .flex-split {
    @apply flex gap-4;
  }
  .flex-split > * {
    @apply flex-shrink-0 flex-grow basis-1/2;
  }

  /* Flex Split Fractions */
  .flex-split-fraction-1-4 > *:nth-child(1) {
    flex-basis: 25%;
  }
  .flex-split-fraction-1-4 > *:nth-child(2) {
    flex-basis: 75%;
  }
  .flex-split-fraction-1-3 > *:nth-child(1) {
    flex-basis: 33.333%;
  }
  .flex-split-fraction-1-3 > *:nth-child(2) {
    flex-basis: 66.666%;
  }
  .flex-split-fraction-1-2 > * {
    @apply basis-1/2;
  }
  .flex-split-fraction-2-3 > *:nth-child(1) {
    flex-basis: 66.666%;
  }
  .flex-split-fraction-2-3 > *:nth-child(2) {
    flex-basis: 33.333%;
  }
  .flex-split-fraction-3-4 > *:nth-child(1) {
    flex-basis: 75%;
  }
  .flex-split-fraction-3-4 > *:nth-child(2) {
    flex-basis: 25%;
  }

  /* Flex Cover */
  .flex-cover {
    --minHeight: initial;
    @apply flex flex-col gap-4;
    min-block-size: var(--minHeight, 100%);
  }
  .flex-cover > .flex-cover-centered {
    @apply my-auto;
  }

  /* Flex Center */
  .flex-center {
    @apply box-content max-w-full;
  }
  .flex-center .flex-center {
    @apply mx-auto;
  }
  .flex-center-center-children {
    @apply flex flex-col items-center;
  }
  .flex-center-center-text {
    @apply text-center;
  }

  /* Flex Column Drop */
  .flex-column-drop {
    --minItemWidth: initial;
    @apply flex flex-wrap justify-center gap-4;
  }
  .flex-column-drop > * {
    flex-basis: var(--minItemWidth, 0px);
    @apply flex-grow;
  }
  .flex-column-drop-no-stretched-columns > * {
    @apply flex-grow-0;
  }
}
*, ::before, ::after{
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}
::backdrop{
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}
/* ! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com */
/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/
*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}
::before,
::after {
  --tw-content: '';
}
/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/
html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: InterVariable, sans-serif;
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}
/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/
body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}
/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/
hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}
/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/
abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}
/*
Remove the default font size and weight for headings.
*/
h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}
/*
Reset links to optimize for opt-in styling instead of opt-out.
*/
a {
  color: inherit;
  text-decoration: inherit;
}
/*
Add the correct font weight in Edge and Safari.
*/
b,
strong {
  font-weight: bolder;
}
/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/
code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}
/*
Add the correct font size in all browsers.
*/
small {
  font-size: 80%;
}
/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/
table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}
/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}
/*
Remove the inheritance of text transform in Edge and Firefox.
*/
button,
select {
  text-transform: none;
}
/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/
button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}
/*
Use the modern Firefox focus style for all focusable elements.
*/
:-moz-focusring {
  outline: auto;
}
/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/
:-moz-ui-invalid {
  box-shadow: none;
}
/*
Add the correct vertical alignment in Chrome and Firefox.
*/
progress {
  vertical-align: baseline;
}
/*
Correct the cursor style of increment and decrement buttons in Safari.
*/
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}
/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/
[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}
/*
Remove the inner padding in Chrome and Safari on macOS.
*/
::-webkit-search-decoration {
  -webkit-appearance: none;
}
/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}
/*
Add the correct display in Chrome and Safari.
*/
summary {
  display: list-item;
}
/*
Removes the default spacing and border for appropriate elements.
*/
blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}
fieldset {
  margin: 0;
  padding: 0;
}
legend {
  padding: 0;
}
ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}
/*
Reset default styling for dialogs.
*/
dialog {
  padding: 0;
}
/*
Prevent resizing textareas horizontally by default.
*/
textarea {
  resize: vertical;
}
/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/
input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}
input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}
/*
Set the default cursor for buttons.
*/
button,
[role="button"] {
  cursor: pointer;
}
/*
Make sure disabled buttons don't get the pointer cursor.
*/
:disabled {
  cursor: default;
}
/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/
img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}
/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/
img,
video {
  max-width: 100%;
  height: auto;
}
/* Make elements with the HTML hidden attribute stay hidden by default */
[hidden]:where(:not([hidden="until-found"])) {
  display: none;
}
[type='text'],input:where(:not([type])),[type='email'],[type='url'],[type='password'],[type='number'],[type='date'],[type='datetime-local'],[type='month'],[type='search'],[type='tel'],[type='time'],[type='week'],[multiple],textarea,select{
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: #fff;
  border-color: #6b7280;
  border-width: 1px;
  border-radius: 0px;
  padding-top: 0.5rem;
  padding-right: 0.75rem;
  padding-bottom: 0.5rem;
  padding-left: 0.75rem;
  font-size: 1rem;
  line-height: 1.5rem;
  --tw-shadow: 0 0 #0000;
}
[type='text']:focus, input:where(:not([type])):focus, [type='email']:focus, [type='url']:focus, [type='password']:focus, [type='number']:focus, [type='date']:focus, [type='datetime-local']:focus, [type='month']:focus, [type='search']:focus, [type='tel']:focus, [type='time']:focus, [type='week']:focus, [multiple]:focus, textarea:focus, select:focus{
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: #2563eb;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  border-color: #2563eb;
}
input::-moz-placeholder, textarea::-moz-placeholder{
  color: #6b7280;
  opacity: 1;
}
input::placeholder,textarea::placeholder{
  color: #6b7280;
  opacity: 1;
}
::-webkit-datetime-edit-fields-wrapper{
  padding: 0;
}
::-webkit-date-and-time-value{
  min-height: 1.5em;
  text-align: inherit;
}
::-webkit-datetime-edit{
  display: inline-flex;
}
::-webkit-datetime-edit,::-webkit-datetime-edit-year-field,::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-hour-field,::-webkit-datetime-edit-minute-field,::-webkit-datetime-edit-second-field,::-webkit-datetime-edit-millisecond-field,::-webkit-datetime-edit-meridiem-field{
  padding-top: 0;
  padding-bottom: 0;
}
select{
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
  background-position: right 0.5rem center;
  background-repeat: no-repeat;
  background-size: 1.5em 1.5em;
  padding-right: 2.5rem;
  -webkit-print-color-adjust: exact;
          print-color-adjust: exact;
}
[multiple],[size]:where(select:not([size="1"])){
  background-image: initial;
  background-position: initial;
  background-repeat: unset;
  background-size: initial;
  padding-right: 0.75rem;
  -webkit-print-color-adjust: unset;
          print-color-adjust: unset;
}
[type='checkbox'],[type='radio']{
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  padding: 0;
  -webkit-print-color-adjust: exact;
          print-color-adjust: exact;
  display: inline-block;
  vertical-align: middle;
  background-origin: border-box;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  flex-shrink: 0;
  height: 1rem;
  width: 1rem;
  color: #2563eb;
  background-color: #fff;
  border-color: #6b7280;
  border-width: 1px;
  --tw-shadow: 0 0 #0000;
}
[type='checkbox']{
  border-radius: 0px;
}
[type='radio']{
  border-radius: 100%;
}
[type='checkbox']:focus,[type='radio']:focus{
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 2px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: #2563eb;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
[type='checkbox']:checked,[type='radio']:checked{
  border-color: transparent;
  background-color: currentColor;
  background-size: 100% 100%;
  background-position: center;
  background-repeat: no-repeat;
}
[type='checkbox']:checked{
  background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e");
}
@media (forced-colors: active) {
  [type='checkbox']:checked{
    -webkit-appearance: auto;
       -moz-appearance: auto;
            appearance: auto;
  }
}
[type='radio']:checked{
  background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e");
}
@media (forced-colors: active) {
  [type='radio']:checked{
    -webkit-appearance: auto;
       -moz-appearance: auto;
            appearance: auto;
  }
}
[type='checkbox']:checked:hover,[type='checkbox']:checked:focus,[type='radio']:checked:hover,[type='radio']:checked:focus{
  border-color: transparent;
  background-color: currentColor;
}
[type='checkbox']:indeterminate{
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 16'%3e%3cpath stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8h8'/%3e%3c/svg%3e");
  border-color: transparent;
  background-color: currentColor;
  background-size: 100% 100%;
  background-position: center;
  background-repeat: no-repeat;
}
@media (forced-colors: active) {
  [type='checkbox']:indeterminate{
    -webkit-appearance: auto;
       -moz-appearance: auto;
            appearance: auto;
  }
}
[type='checkbox']:indeterminate:hover,[type='checkbox']:indeterminate:focus{
  border-color: transparent;
  background-color: currentColor;
}
[type='file']{
  background: unset;
  border-color: inherit;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-size: unset;
  line-height: inherit;
}
[type='file']:focus{
  outline: 1px solid ButtonText;
  outline: 1px auto -webkit-focus-ring-color;
}
.container{
  width: 100%;
}
@media (min-width: 240px){
  .container{
    max-width: 240px;
  }
}
@media (min-width: 384px){
  .container{
    max-width: 384px;
  }
}
@media (min-width: 512px){
  .container{
    max-width: 512px;
  }
}
@media (min-width: 672px){
  .container{
    max-width: 672px;
  }
}
@media (min-width: 768px){
  .container{
    max-width: 768px;
  }
}
@media (min-width: 1024px){
  .container{
    max-width: 1024px;
  }
}
@media (min-width: 1440px){
  .container{
    max-width: 1440px;
  }
}
@media (min-width: 1920px){
  .container{
    max-width: 1920px;
  }
}
.prose{
  color: var(--tw-prose-body);
  max-width: 65ch;
}
.prose :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.prose :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}
.prose :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}
.prose :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: var(--tw-prose-bold);
  font-weight: 600;
}
.prose :where(a strong):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: inherit;
}
.prose :where(blockquote strong):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: inherit;
}
.prose :where(thead th strong):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: inherit;
}
.prose :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}
.prose :where(ol[type="A"]):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  list-style-type: upper-alpha;
}
.prose :where(ol[type="a"]):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  list-style-type: lower-alpha;
}
.prose :where(ol[type="A" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  list-style-type: upper-alpha;
}
.prose :where(ol[type="a" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  list-style-type: lower-alpha;
}
.prose :where(ol[type="I"]):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  list-style-type: upper-roman;
}
.prose :where(ol[type="i"]):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  list-style-type: lower-roman;
}
.prose :where(ol[type="I" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  list-style-type: upper-roman;
}
.prose :where(ol[type="i" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  list-style-type: lower-roman;
}
.prose :where(ol[type="1"]):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  list-style-type: decimal;
}
.prose :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}
.prose :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker{
  font-weight: 400;
  color: var(--tw-prose-counters);
}
.prose :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker{
  color: var(--tw-prose-bullets);
}
.prose :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.25em;
}
.prose :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}
.prose :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-inline-start-width: 0.25rem;
  border-inline-start-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-inline-start: 1em;
}
.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before{
  content: open-quote;
}
.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after{
  content: close-quote;
}
.prose :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}
.prose :where(h1 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  font-weight: 900;
  color: inherit;
}
.prose :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}
.prose :where(h2 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  font-weight: 800;
  color: inherit;
}
.prose :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}
.prose :where(h3 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  font-weight: 700;
  color: inherit;
}
.prose :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}
.prose :where(h4 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  font-weight: 700;
  color: inherit;
}
.prose :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  display: block;
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  font-weight: 500;
  font-family: inherit;
  color: var(--tw-prose-kbd);
  box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
  font-size: 0.875em;
  border-radius: 0.3125rem;
  padding-top: 0.1875em;
  padding-inline-end: 0.375em;
  padding-bottom: 0.1875em;
  padding-inline-start: 0.375em;
}
.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}
.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before{
  content: "`";
}
.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after{
  content: "`";
}
.prose :where(a code):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: inherit;
}
.prose :where(h1 code):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: inherit;
}
.prose :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: inherit;
  font-size: 0.875em;
}
.prose :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: inherit;
  font-size: 0.9em;
}
.prose :where(h4 code):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: inherit;
}
.prose :where(blockquote code):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: inherit;
}
.prose :where(thead th code):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: inherit;
}
.prose :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-inline-end: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-inline-start: 1.1428571em;
}
.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}
.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before{
  content: none;
}
.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after{
  content: none;
}
.prose :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  width: 100%;
  table-layout: auto;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}
.prose :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}
.prose :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}
.prose :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}
.prose :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  border-bottom-width: 0;
}
.prose :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  vertical-align: baseline;
}
.prose :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}
.prose :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  vertical-align: top;
}
.prose :where(th, td):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  text-align: start;
}
.prose :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 0;
  margin-bottom: 0;
}
.prose :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}
.prose{
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-kbd: #111827;
  --tw-prose-kbd-shadows: 17 24 39;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-kbd: #fff;
  --tw-prose-invert-kbd-shadows: 255 255 255;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}
.prose :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 0;
  margin-bottom: 0;
}
.prose :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}
.prose :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  padding-inline-start: 0.375em;
}
.prose :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  padding-inline-start: 0.375em;
}
.prose :where(.prose > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.prose :where(.prose > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 1.25em;
}
.prose :where(.prose > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-bottom: 1.25em;
}
.prose :where(.prose > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 1.25em;
}
.prose :where(.prose > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-bottom: 1.25em;
}
.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.prose :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.prose :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 0.5em;
  padding-inline-start: 1.625em;
}
.prose :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 0;
}
.prose :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 0;
}
.prose :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 0;
}
.prose :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 0;
}
.prose :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  padding-inline-start: 0;
}
.prose :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  padding-inline-end: 0;
}
.prose :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  padding-top: 0.5714286em;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}
.prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  padding-inline-start: 0;
}
.prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  padding-inline-end: 0;
}
.prose :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(.prose > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 0;
}
.prose :where(.prose > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-bottom: 0;
}
.static{
  position: static;
}
.col-span-3{
  grid-column: span 3 / span 3;
}
.mx-auto{
  margin-left: auto;
  margin-right: auto;
}
.mb-4{
  margin-bottom: 1rem;
}
.mb-6{
  margin-bottom: 1.5rem;
}
.mt-1{
  margin-top: 0.25rem;
}
.mt-2{
  margin-top: 0.5rem;
}
.mt-3{
  margin-top: 0.75rem;
}
.mt-4{
  margin-top: 1rem;
}
.mt-6{
  margin-top: 1.5rem;
}
.block{
  display: block;
}
.inline-block{
  display: inline-block;
}
.inline{
  display: inline;
}
.flex{
  display: flex;
}
.table{
  display: table;
}
.grid{
  display: grid;
}
.hidden{
  display: none;
}
.size-6{
  width: 1.5rem;
  height: 1.5rem;
}
.h-screen{
  height: 100vh;
}
.w-full{
  width: 100%;
}
.grid-cols-2{
  grid-template-columns: repeat(2, minmax(0, 1fr));
}
.grid-cols-\[repeat\(auto-fit\2c minmax\(250px\2c 1fr\)\)\]{
  grid-template-columns: repeat(auto-fit,minmax(250px,1fr));
}
.items-center{
  align-items: center;
}
.justify-end{
  justify-content: flex-end;
}
.justify-center{
  justify-content: center;
}
.justify-between{
  justify-content: space-between;
}
.gap-4{
  gap: 1rem;
}
.gap-6{
  gap: 1.5rem;
}
.space-x-2 > :not([hidden]) ~ :not([hidden]){
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}
.space-x-6 > :not([hidden]) ~ :not([hidden]){
  --tw-space-x-reverse: 0;
  margin-right: calc(1.5rem * var(--tw-space-x-reverse));
  margin-left: calc(1.5rem * calc(1 - var(--tw-space-x-reverse)));
}
.space-y-4 > :not([hidden]) ~ :not([hidden]){
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}
.space-y-6 > :not([hidden]) ~ :not([hidden]){
  --tw-space-y-reverse: 0;
  margin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.5rem * var(--tw-space-y-reverse));
}
.space-x-4 > :not([hidden]) ~ :not([hidden]){
  --tw-space-x-reverse: 0;
  margin-right: calc(1rem * var(--tw-space-x-reverse));
  margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
}
.rounded-lg{
  border-radius: 0.5rem;
}
.rounded-md{
  border-radius: 0.375rem;
}
.border{
  border-width: 1px;
}
.border-none{
  border-style: none;
}
.border-gray-300{
  --tw-border-opacity: 1;
  border-color: rgb(209 213 219 / var(--tw-border-opacity, 1));
}
.border-gray-800{
  --tw-border-opacity: 1;
  border-color: rgb(31 41 55 / var(--tw-border-opacity, 1));
}
.bg-background2{
  background-color: var(--background2);
}
.bg-blue-600{
  --tw-bg-opacity: 1;
  background-color: rgb(37 99 235 / var(--tw-bg-opacity, 1));
}
.bg-gray-50{
  --tw-bg-opacity: 1;
  background-color: rgb(249 250 251 / var(--tw-bg-opacity, 1));
}
.bg-red-600{
  --tw-bg-opacity: 1;
  background-color: rgb(220 38 38 / var(--tw-bg-opacity, 1));
}
.bg-white{
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
}
.bg-transparent{
  background-color: transparent;
}
.p-2{
  padding: 0.5rem;
}
.p-4{
  padding: 1rem;
}
.p-6{
  padding: 1.5rem;
}
.p-0{
  padding: 0px;
}
.px-4{
  padding-left: 1rem;
  padding-right: 1rem;
}
.py-2{
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}
.py-8{
  padding-top: 2rem;
  padding-bottom: 2rem;
}
.pl-4{
  padding-left: 1rem;
}
.text-center{
  text-align: center;
}
.text-right{
  text-align: right;
}
.align-baseline{
  vertical-align: baseline;
}
.font-serif{
  font-family: Playfair Display, serif;
}
.text-3xl{
  font-size: 1.875rem;
  line-height: 2.25rem;
}
.text-4xl{
  font-size: 2.25rem;
  line-height: 2.5rem;
}
.text-5xl{
  font-size: 3rem;
  line-height: 1;
}
.text-lg{
  font-size: 1.125rem;
  line-height: 1.75rem;
}
.text-sm{
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.text-xl{
  font-size: 1.25rem;
  line-height: 1.75rem;
}
.font-bold{
  font-weight: 700;
}
.font-extrabold{
  font-weight: 800;
}
.font-medium{
  font-weight: 500;
}
.font-semibold{
  font-weight: 600;
}
.italic{
  font-style: italic;
}
.leading-normal{
  line-height: 1.5;
}
.tracking-normal{
  letter-spacing: 0em;
}
.text-blue-500{
  --tw-text-opacity: 1;
  color: rgb(59 130 246 / var(--tw-text-opacity, 1));
}
.text-blue-600{
  --tw-text-opacity: 1;
  color: rgb(37 99 235 / var(--tw-text-opacity, 1));
}
.text-gray-500{
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity, 1));
}
.text-gray-600{
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity, 1));
}
.text-gray-700{
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity, 1));
}
.text-gray-800{
  --tw-text-opacity: 1;
  color: rgb(31 41 55 / var(--tw-text-opacity, 1));
}
.text-gray-900{
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity, 1));
}
.text-green-600{
  --tw-text-opacity: 1;
  color: rgb(22 163 74 / var(--tw-text-opacity, 1));
}
.text-pink-600{
  --tw-text-opacity: 1;
  color: rgb(219 39 119 / var(--tw-text-opacity, 1));
}
.text-red-500{
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / var(--tw-text-opacity, 1));
}
.text-white{
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}
.text-yellow-500{
  --tw-text-opacity: 1;
  color: rgb(234 179 8 / var(--tw-text-opacity, 1));
}
.text-clr-neon-pink{
  color: var(--clr-neon-pink);
}
.text-black{
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity, 1));
}
.text-yellow-700{
  --tw-text-opacity: 1;
  color: rgb(161 98 7 / var(--tw-text-opacity, 1));
}
.text-yellow-600{
  --tw-text-opacity: 1;
  color: rgb(202 138 4 / var(--tw-text-opacity, 1));
}
.shadow{
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.shadow-lg{
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.shadow-md{
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.shadow-sm{
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.transition{
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.duration-150{
  transition-duration: 150ms;
}
.duration-300{
  transition-duration: 300ms;
}
@keyframes enter{
  from{
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0));
  }
}
@keyframes exit{
  to{
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0));
  }
}
.duration-150{
  animation-duration: 150ms;
}
.duration-300{
  animation-duration: 300ms;
}
.holder{
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  border: 1px solid red;
}
.section{
  margin-top: 5rem;
}
* {
  line-height: calc(1em + 0.5rem);
}
html {
  scroll-behavior: smooth;
}
body {
  -webkit-font-smoothing: antialiased;
  background: var(--background);
  color: var(--text1);
  font-family: var(--font-sans), sans-serif;
  /* Ensuring font-family is applied */
}
/* Balance text wrapping on headings */
h1,
h2,
h3,
h4,
h5,
h6 {
  text-wrap: balance;
}
p,
li,
figcaption {
  overflow-wrap: break-word;
  text-wrap: pretty;
}
header,
main,
aside,
section,
article,
footer {
  container-type: inline-size;
}
li {
  text-decoration: none;
}
/* Scrollbar */
body::-webkit-scrollbar {
  width: 8px;
}
body::-webkit-scrollbar-track {
  box-shadow: inset 0 0 0 oklch(0 0 0);
}
body::-webkit-scrollbar-thumb {
  background-color: var(--clr-pink);
  outline: 1px solid var(--clr-pink);
}
.hover\:bg-blue-700:hover{
  --tw-bg-opacity: 1;
  background-color: rgb(29 78 216 / var(--tw-bg-opacity, 1));
}
.hover\:bg-red-700:hover{
  --tw-bg-opacity: 1;
  background-color: rgb(185 28 28 / var(--tw-bg-opacity, 1));
}
.hover\:text-clr-neon-pink:hover{
  color: var(--clr-neon-pink);
}
.hover\:text-green-500:hover{
  --tw-text-opacity: 1;
  color: rgb(34 197 94 / var(--tw-text-opacity, 1));
}
.hover\:text-green-700:hover{
  --tw-text-opacity: 1;
  color: rgb(21 128 61 / var(--tw-text-opacity, 1));
}
.hover\:underline:hover{
  text-decoration-line: underline;
}
.dark\:text-white:is(.dark *){
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}
@media not all and (min-width: 672px){
  .max-md\:hidden{
    display: none;
  }
}
@media not all and (min-width: 512px){
  .max-sm\:flex-col{
    flex-direction: column;
  }

  .max-sm\:justify-start{
    justify-content: flex-start;
  }

  .max-sm\:justify-end{
    justify-content: flex-end;
  }

  .max-sm\:text-xs{
    font-size: 0.75rem;
    line-height: 1rem;
  }
}
